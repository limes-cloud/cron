// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: api/cron/server/log/cron_log.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLogRequest) Reset() {
	*x = GetLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRequest) ProtoMessage() {}

func (x *GetLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRequest.ProtoReflect.Descriptor instead.
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{0}
}

func (x *GetLogRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	WorkerId       uint32 `protobuf:"varint,3,opt,name=workerId,proto3" json:"workerId,omitempty"`
	WorkerSnapshot string `protobuf:"bytes,4,opt,name=workerSnapshot,proto3" json:"workerSnapshot,omitempty"`
	TaskId         uint32 `protobuf:"varint,5,opt,name=taskId,proto3" json:"taskId,omitempty"`
	TaskSnapshot   string `protobuf:"bytes,6,opt,name=taskSnapshot,proto3" json:"taskSnapshot,omitempty"`
	StartAt        uint32 `protobuf:"varint,7,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt          uint32 `protobuf:"varint,8,opt,name=endAt,proto3" json:"endAt,omitempty"`
	Content        string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	Status         string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLogReply) Reset() {
	*x = GetLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogReply) ProtoMessage() {}

func (x *GetLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogReply.ProtoReflect.Descriptor instead.
func (*GetLogReply) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{1}
}

func (x *GetLogReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLogReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetLogReply) GetWorkerId() uint32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *GetLogReply) GetWorkerSnapshot() string {
	if x != nil {
		return x.WorkerSnapshot
	}
	return ""
}

func (x *GetLogReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *GetLogReply) GetTaskSnapshot() string {
	if x != nil {
		return x.TaskSnapshot
	}
	return ""
}

func (x *GetLogReply) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetLogReply) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetLogReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetLogReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TaskId   uint32  `protobuf:"varint,3,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Order    *string `protobuf:"bytes,4,opt,name=order,proto3,oneof" json:"order,omitempty"`
	OrderBy  *string `protobuf:"bytes,5,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`
}

func (x *ListLogRequest) Reset() {
	*x = ListLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogRequest) ProtoMessage() {}

func (x *ListLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogRequest.ProtoReflect.Descriptor instead.
func (*ListLogRequest) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{2}
}

func (x *ListLogRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListLogRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLogRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ListLogRequest) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

func (x *ListLogRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

type ListLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListLogReply_Log `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListLogReply) Reset() {
	*x = ListLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogReply) ProtoMessage() {}

func (x *ListLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogReply.ProtoReflect.Descriptor instead.
func (*ListLogReply) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{3}
}

func (x *ListLogReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListLogReply) GetList() []*ListLogReply_Log {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	WorkerId       uint32 `protobuf:"varint,2,opt,name=workerId,proto3" json:"workerId,omitempty"`
	WorkerSnapshot string `protobuf:"bytes,3,opt,name=workerSnapshot,proto3" json:"workerSnapshot,omitempty"`
	TaskId         uint32 `protobuf:"varint,4,opt,name=taskId,proto3" json:"taskId,omitempty"`
	TaskSnapshot   string `protobuf:"bytes,5,opt,name=taskSnapshot,proto3" json:"taskSnapshot,omitempty"`
	StartAt        uint32 `protobuf:"varint,6,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt          uint32 `protobuf:"varint,7,opt,name=endAt,proto3" json:"endAt,omitempty"`
	Content        string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	Status         string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateLogRequest) Reset() {
	*x = CreateLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLogRequest) ProtoMessage() {}

func (x *CreateLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLogRequest.ProtoReflect.Descriptor instead.
func (*CreateLogRequest) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLogRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CreateLogRequest) GetWorkerId() uint32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *CreateLogRequest) GetWorkerSnapshot() string {
	if x != nil {
		return x.WorkerSnapshot
	}
	return ""
}

func (x *CreateLogRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *CreateLogRequest) GetTaskSnapshot() string {
	if x != nil {
		return x.TaskSnapshot
	}
	return ""
}

func (x *CreateLogRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *CreateLogRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *CreateLogRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLogReply) Reset() {
	*x = CreateLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLogReply) ProtoMessage() {}

func (x *CreateLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLogReply.ProtoReflect.Descriptor instead.
func (*CreateLogReply) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLogReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	WorkerId       uint32 `protobuf:"varint,3,opt,name=workerId,proto3" json:"workerId,omitempty"`
	WorkerSnapshot string `protobuf:"bytes,4,opt,name=workerSnapshot,proto3" json:"workerSnapshot,omitempty"`
	TaskId         uint32 `protobuf:"varint,5,opt,name=taskId,proto3" json:"taskId,omitempty"`
	TaskSnapshot   string `protobuf:"bytes,6,opt,name=taskSnapshot,proto3" json:"taskSnapshot,omitempty"`
	StartAt        uint32 `protobuf:"varint,7,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt          uint32 `protobuf:"varint,8,opt,name=endAt,proto3" json:"endAt,omitempty"`
	Content        string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	Status         string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateLogRequest) Reset() {
	*x = UpdateLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLogRequest) ProtoMessage() {}

func (x *UpdateLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateLogRequest) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLogRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLogRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateLogRequest) GetWorkerId() uint32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *UpdateLogRequest) GetWorkerSnapshot() string {
	if x != nil {
		return x.WorkerSnapshot
	}
	return ""
}

func (x *UpdateLogRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *UpdateLogRequest) GetTaskSnapshot() string {
	if x != nil {
		return x.TaskSnapshot
	}
	return ""
}

func (x *UpdateLogRequest) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *UpdateLogRequest) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *UpdateLogRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLogReply) Reset() {
	*x = UpdateLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLogReply) ProtoMessage() {}

func (x *UpdateLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLogReply.ProtoReflect.Descriptor instead.
func (*UpdateLogReply) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{7}
}

type DeleteLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteLogRequest) Reset() {
	*x = DeleteLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogRequest) ProtoMessage() {}

func (x *DeleteLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogRequest.ProtoReflect.Descriptor instead.
func (*DeleteLogRequest) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLogRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DeleteLogReply) Reset() {
	*x = DeleteLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogReply) ProtoMessage() {}

func (x *DeleteLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogReply.ProtoReflect.Descriptor instead.
func (*DeleteLogReply) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteLogReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListLogReply_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	WorkerId uint32 `protobuf:"varint,3,opt,name=workerId,proto3" json:"workerId,omitempty"`
	TaskId   uint32 `protobuf:"varint,4,opt,name=taskId,proto3" json:"taskId,omitempty"`
	StartAt  uint32 `protobuf:"varint,5,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt    uint32 `protobuf:"varint,6,opt,name=endAt,proto3" json:"endAt,omitempty"`
	Status   string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListLogReply_Log) Reset() {
	*x = ListLogReply_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cron_server_log_cron_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogReply_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogReply_Log) ProtoMessage() {}

func (x *ListLogReply_Log) ProtoReflect() protoreflect.Message {
	mi := &file_api_cron_server_log_cron_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogReply_Log.ProtoReflect.Descriptor instead.
func (*ListLogReply_Log) Descriptor() ([]byte, []int) {
	return file_api_cron_server_log_cron_log_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListLogReply_Log) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListLogReply_Log) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListLogReply_Log) GetWorkerId() uint32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *ListLogReply_Log) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ListLogReply_Log) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *ListLogReply_Log) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *ListLogReply_Log) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_api_cron_server_log_cron_log_proto protoreflect.FileDescriptor

var file_api_cron_server_log_cron_log_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x2a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x2a, 0x04, 0x18, 0x32, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x72, 0x0b, 0x52, 0x03, 0x61, 0x73, 0x63, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x40, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x21, 0xfa, 0x42, 0x1e, 0x72, 0x1c, 0x52, 0x02, 0x69, 0x64, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x48, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x8f, 0x02, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x41,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x72, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63,
	0x72, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6e, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc7, 0x02, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe0, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65,
	0x6e, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x0c, 0xfa, 0x42, 0x09,
	0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x32, 0x18, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x26,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x2f, 0x0a, 0x1b, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x05, 0x4c, 0x6f, 0x67, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x07,
	0x2e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_cron_server_log_cron_log_proto_rawDescOnce sync.Once
	file_api_cron_server_log_cron_log_proto_rawDescData = file_api_cron_server_log_cron_log_proto_rawDesc
)

func file_api_cron_server_log_cron_log_proto_rawDescGZIP() []byte {
	file_api_cron_server_log_cron_log_proto_rawDescOnce.Do(func() {
		file_api_cron_server_log_cron_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_cron_server_log_cron_log_proto_rawDescData)
	})
	return file_api_cron_server_log_cron_log_proto_rawDescData
}

var file_api_cron_server_log_cron_log_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_cron_server_log_cron_log_proto_goTypes = []interface{}{
	(*GetLogRequest)(nil),    // 0: cron.api.server.cron.log.v1.GetLogRequest
	(*GetLogReply)(nil),      // 1: cron.api.server.cron.log.v1.GetLogReply
	(*ListLogRequest)(nil),   // 2: cron.api.server.cron.log.v1.ListLogRequest
	(*ListLogReply)(nil),     // 3: cron.api.server.cron.log.v1.ListLogReply
	(*CreateLogRequest)(nil), // 4: cron.api.server.cron.log.v1.CreateLogRequest
	(*CreateLogReply)(nil),   // 5: cron.api.server.cron.log.v1.CreateLogReply
	(*UpdateLogRequest)(nil), // 6: cron.api.server.cron.log.v1.UpdateLogRequest
	(*UpdateLogReply)(nil),   // 7: cron.api.server.cron.log.v1.UpdateLogReply
	(*DeleteLogRequest)(nil), // 8: cron.api.server.cron.log.v1.DeleteLogRequest
	(*DeleteLogReply)(nil),   // 9: cron.api.server.cron.log.v1.DeleteLogReply
	(*ListLogReply_Log)(nil), // 10: cron.api.server.cron.log.v1.ListLogReply.Log
}
var file_api_cron_server_log_cron_log_proto_depIdxs = []int32{
	10, // 0: cron.api.server.cron.log.v1.ListLogReply.list:type_name -> cron.api.server.cron.log.v1.ListLogReply.Log
	1,  // [1:1] is the sub-list for method output_type
	1,  // [1:1] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_cron_server_log_cron_log_proto_init() }
func file_api_cron_server_log_cron_log_proto_init() {
	if File_api_cron_server_log_cron_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_cron_server_log_cron_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cron_server_log_cron_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogReply_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_cron_server_log_cron_log_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_cron_server_log_cron_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_cron_server_log_cron_log_proto_goTypes,
		DependencyIndexes: file_api_cron_server_log_cron_log_proto_depIdxs,
		MessageInfos:      file_api_cron_server_log_cron_log_proto_msgTypes,
	}.Build()
	File_api_cron_server_log_cron_log_proto = out.File
	file_api_cron_server_log_cron_log_proto_rawDesc = nil
	file_api_cron_server_log_cron_log_proto_goTypes = nil
	file_api_cron_server_log_cron_log_proto_depIdxs = nil
}
